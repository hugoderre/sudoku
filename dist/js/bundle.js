/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/ts/App.ts":
/*!***********************!*\
  !*** ./src/ts/App.ts ***!
  \***********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _components_Grid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/Grid */ \"./src/ts/components/Grid.ts\");\n/* harmony import */ var _components_GameUI__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/GameUI */ \"./src/ts/components/GameUI.ts\");\n/* harmony import */ var _components_GameController__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/GameController */ \"./src/ts/components/GameController.ts\");\n/* harmony import */ var _components_SocialMedia__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/SocialMedia */ \"./src/ts/components/SocialMedia.ts\");\n\r\n\r\n\r\n\r\nvar App = /** @class */ (function () {\r\n    function App() {\r\n        this.rootDOM = document.getElementById('root');\r\n        this.container = document.createElement('div');\r\n        this.grid = new _components_Grid__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\r\n        this.gameUI = new _components_GameUI__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.grid);\r\n        this.init();\r\n    }\r\n    App.prototype.init = function () {\r\n        this.container.classList.add('container');\r\n        this.container.append(this.grid.getBoard());\r\n        this.container.prepend(this.gameUI.getTopElements());\r\n        this.container.append(this.gameUI.getBottomElements());\r\n        this.rootDOM.append(this.container);\r\n        this.rootDOM.append(new _components_SocialMedia__WEBPACK_IMPORTED_MODULE_3__[\"default\"]().getElement());\r\n        new _components_GameController__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.grid, this.gameUI);\r\n    };\r\n    return App;\r\n}());\r\nnew App();\r\n\n\n//# sourceURL=webpack://sudoku/./src/ts/App.ts?");

/***/ }),

/***/ "./src/ts/components/GameController.ts":
/*!*********************************************!*\
  !*** ./src/ts/components/GameController.ts ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Generator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Generator */ \"./src/ts/components/Generator.ts\");\nvar __values = (undefined && undefined.__values) || function(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n};\r\n\r\nvar GameController = /** @class */ (function () {\r\n    function GameController(grid, gameUI) {\r\n        this.grid = grid;\r\n        this.gameUI = gameUI;\r\n        this.initEventListeners();\r\n        this.newGame(); // Start a new game on page load\r\n    }\r\n    GameController.prototype.initEventListeners = function () {\r\n        var e_1, _a;\r\n        var _b, _c, _d, _e;\r\n        (_b = document.getElementById('new-game')) === null || _b === void 0 ? void 0 : _b.addEventListener('click', this.newGame.bind(this));\r\n        (_c = document.getElementById('verify')) === null || _c === void 0 ? void 0 : _c.addEventListener('click', this.verifyValues.bind(this));\r\n        var padNumbers = Array.from(document.getElementsByClassName('pad-number'));\r\n        try {\r\n            for (var padNumbers_1 = __values(padNumbers), padNumbers_1_1 = padNumbers_1.next(); !padNumbers_1_1.done; padNumbers_1_1 = padNumbers_1.next()) {\r\n                var padNumber = padNumbers_1_1.value;\r\n                padNumber.addEventListener('click', this.handlePadNumber.bind(this));\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (padNumbers_1_1 && !padNumbers_1_1.done && (_a = padNumbers_1.return)) _a.call(padNumbers_1);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        (_d = document.getElementById('cell-erase')) === null || _d === void 0 ? void 0 : _d.addEventListener('click', this.handleCellErase.bind(this));\r\n        (_e = document.getElementById('cell-tip')) === null || _e === void 0 ? void 0 : _e.addEventListener('click', this.handleCellTip.bind(this));\r\n        document.addEventListener('keydown', this.handleUserKeyInputs.bind(this));\r\n    };\r\n    GameController.prototype.newGame = function () {\r\n        this.grid.clearBoard();\r\n        this.grid.displayConfettis(false);\r\n        this.grid.correctValues = new _Generator__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.grid, this.gameUI.getUserDifficulty()).generateValues();\r\n        this.gameUI.timer.start();\r\n    };\r\n    GameController.prototype.verifyValues = function () {\r\n        if (!this.grid.correctValues) {\r\n            return;\r\n        }\r\n        this.grid.clearVerifyMode();\r\n        this.grid.setVerifyMode();\r\n    };\r\n    GameController.prototype.handlePadNumber = function (e) {\r\n        if (!this.grid.userEditableCell) {\r\n            return;\r\n        }\r\n        var padNumber = e.target;\r\n        this.grid.updateCellValue(this.grid.userEditableCell, parseInt(padNumber.innerText));\r\n        this.handleMaybeSolvedGrid();\r\n    };\r\n    GameController.prototype.handleCellErase = function () {\r\n        if (!this.grid.userEditableCell) {\r\n            return;\r\n        }\r\n        this.grid.removeCellValue(this.grid.userEditableCell);\r\n    };\r\n    GameController.prototype.handleCellTip = function () {\r\n        if (!this.grid.userEditableCell) {\r\n            return;\r\n        }\r\n        var editableCellIndex = this.grid.cells.indexOf(this.grid.userEditableCell);\r\n        this.grid.updateCellValue(this.grid.userEditableCell, this.grid.correctValues[editableCellIndex]);\r\n        this.handleMaybeSolvedGrid();\r\n    };\r\n    GameController.prototype.handleUserKeyInputs = function (e) {\r\n        if (!(this.grid.userEditableCell instanceof HTMLElement)) {\r\n            return;\r\n        }\r\n        if (e.key == 'Backspace') {\r\n            this.grid.removeCellValue(this.grid.userEditableCell);\r\n        }\r\n        if (parseInt(e.key) > 0 && parseInt(e.key) <= 9) {\r\n            this.grid.updateCellValue(this.grid.userEditableCell, parseInt(e.key));\r\n        }\r\n        this.grid.highlightCells(this.grid.userEditableCell);\r\n        this.handleMaybeSolvedGrid();\r\n    };\r\n    GameController.prototype.handleMaybeSolvedGrid = function () {\r\n        if (this.grid.isGridSolved()) {\r\n            this.gameWon();\r\n        }\r\n        else if (this.grid.isGridFullyFilled()) {\r\n            this.verifyValues();\r\n        }\r\n    };\r\n    GameController.prototype.gameWon = function () {\r\n        this.grid.setVerifyMode();\r\n        this.gameUI.timer.stop();\r\n        this.grid.displayConfettis(true);\r\n        this.grid.setCellsInStaticMode();\r\n        this.grid.unsetEditableCell();\r\n    };\r\n    return GameController;\r\n}());\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (GameController);\r\n\n\n//# sourceURL=webpack://sudoku/./src/ts/components/GameController.ts?");

/***/ }),

/***/ "./src/ts/components/GameUI.ts":
/*!*************************************!*\
  !*** ./src/ts/components/GameUI.ts ***!
  \*************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Timer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Timer */ \"./src/ts/components/Timer.ts\");\n\r\nvar GameUI = /** @class */ (function () {\r\n    function GameUI(grid) {\r\n        this.timer = new _Timer__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\r\n        this.grid = grid;\r\n    }\r\n    GameUI.prototype.getTopElements = function () {\r\n        var elements = document.createElement('div');\r\n        elements.id = 'game-ui-top';\r\n        elements.append(this.getButtonsElements());\r\n        elements.append(this.timer.getTimer());\r\n        return elements;\r\n    };\r\n    GameUI.prototype.getButtonsElements = function () {\r\n        var elements = document.createElement('div');\r\n        elements.id = 'game-ui-buttons';\r\n        elements.append(this.getNewGameButton());\r\n        elements.append(this.getDifficultySelector());\r\n        elements.append(this.getVerifyButton());\r\n        return elements;\r\n    };\r\n    GameUI.prototype.getNewGameButton = function () {\r\n        var newGameButton = document.createElement('button');\r\n        newGameButton.id = 'new-game';\r\n        newGameButton.innerText = 'New Game';\r\n        return newGameButton;\r\n    };\r\n    GameUI.prototype.getDifficultySelector = function () {\r\n        var difficultySelector = document.createElement('select');\r\n        difficultySelector.id = 'difficulty-selector';\r\n        difficultySelector.append(this.getDifficultyOption('easy', true));\r\n        difficultySelector.append(this.getDifficultyOption('medium'));\r\n        difficultySelector.append(this.getDifficultyOption('hard'));\r\n        return difficultySelector;\r\n    };\r\n    GameUI.prototype.getDifficultyOption = function (difficulty, selected) {\r\n        if (selected === void 0) { selected = false; }\r\n        var difficultyOption = document.createElement('option');\r\n        difficultyOption.value = difficulty;\r\n        difficultyOption.innerText = difficulty.charAt(0).toUpperCase() + difficulty.slice(1);\r\n        difficultyOption.selected = selected;\r\n        return difficultyOption;\r\n    };\r\n    GameUI.prototype.getUserDifficulty = function () {\r\n        var difficultySelector = document.getElementById('difficulty-selector');\r\n        return difficultySelector.value;\r\n    };\r\n    GameUI.prototype.getVerifyButton = function () {\r\n        var checkButton = document.createElement('button');\r\n        checkButton.id = 'verify';\r\n        checkButton.innerText = 'Verify';\r\n        return checkButton;\r\n    };\r\n    GameUI.prototype.getBottomElements = function () {\r\n        var elements = document.createElement('div');\r\n        elements.id = 'game-ui-bottom';\r\n        elements.append(this.getPadNumbers());\r\n        elements.append(this.getGridCellActionsButtons());\r\n        return elements;\r\n    };\r\n    GameUI.prototype.getPadNumbers = function () {\r\n        var padNumbers = document.createElement('div');\r\n        padNumbers.id = 'pad-numbers';\r\n        for (var number = 1; number <= 9; number++) {\r\n            padNumbers.append(this.getPadNumber(number));\r\n        }\r\n        return padNumbers;\r\n    };\r\n    GameUI.prototype.getPadNumber = function (number) {\r\n        var padNumber = document.createElement('div');\r\n        padNumber.classList.add('pad-number');\r\n        var padNumberSpan = document.createElement('span');\r\n        padNumberSpan.innerText = number.toString();\r\n        padNumber.append(padNumberSpan);\r\n        return padNumber;\r\n    };\r\n    GameUI.prototype.getGridCellActionsButtons = function () {\r\n        var elements = document.createElement('div');\r\n        elements.id = 'grid-actions-buttons';\r\n        elements.append(this.getCellEraseButton());\r\n        elements.append(this.getCellTipButton());\r\n        return elements;\r\n    };\r\n    GameUI.prototype.getCellEraseButton = function () {\r\n        var cellEraseButton = document.createElement('div');\r\n        cellEraseButton.id = 'cell-erase';\r\n        var cellEraseButtonSpan = document.createElement('span');\r\n        cellEraseButtonSpan.innerHTML = '<i class=\"fa-solid fa-eraser\"></i>';\r\n        cellEraseButton.append(cellEraseButtonSpan);\r\n        return cellEraseButton;\r\n    };\r\n    GameUI.prototype.getCellTipButton = function () {\r\n        var tipCellButton = document.createElement('div');\r\n        tipCellButton.id = 'cell-tip';\r\n        var tipCellButtonSpan = document.createElement('span');\r\n        tipCellButtonSpan.innerHTML = '<i class=\"fa-solid fa-lightbulb\"></i>';\r\n        tipCellButton.append(tipCellButtonSpan);\r\n        return tipCellButton;\r\n    };\r\n    return GameUI;\r\n}());\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (GameUI);\r\n\n\n//# sourceURL=webpack://sudoku/./src/ts/components/GameUI.ts?");

/***/ }),

/***/ "./src/ts/components/Generator.ts":
/*!****************************************!*\
  !*** ./src/ts/components/Generator.ts ***!
  \****************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Helpers */ \"./src/ts/components/Helpers.ts\");\n\r\nvar Generator = /** @class */ (function () {\r\n    function Generator(grid, difficulty) {\r\n        this.gridValues = this.getBaseGrid();\r\n        this.grid = grid;\r\n        this.difficulty = difficulty;\r\n    }\r\n    Generator.prototype.generateValues = function () {\r\n        for (var i = 0; i < 200; i++) {\r\n            this.shuffleDigits();\r\n        }\r\n        for (var i = 0; i < 20; i++) {\r\n            this.shuffleRows([0, 2]);\r\n            this.shuffleRows([3, 5]);\r\n            this.shuffleRows([6, 8]);\r\n        }\r\n        for (var i = 0; i < 20; i++) {\r\n            this.shuffleColumns([0, 2]);\r\n            this.shuffleColumns([3, 5]);\r\n            this.shuffleColumns([6, 8]);\r\n        }\r\n        // Format grid values order to match the grid\r\n        var correctValues = _Helpers__WEBPACK_IMPORTED_MODULE_0__[\"default\"].concatArraysInArray(_Helpers__WEBPACK_IMPORTED_MODULE_0__[\"default\"].convertRowValuesToGroupedValues(this.gridValues));\r\n        for (var i = 0; i < correctValues.length; i++) {\r\n            this.grid.updateCellValue(this.grid.cells[i], correctValues[i], false);\r\n        }\r\n        this.hideSomeCellsInGroups();\r\n        return correctValues;\r\n    };\r\n    Generator.prototype.getBaseGrid = function () {\r\n        return ([\r\n            [1, 2, 3, 4, 5, 6, 7, 8, 9],\r\n            [4, 5, 6, 7, 8, 9, 1, 2, 3],\r\n            [7, 8, 9, 1, 2, 3, 4, 5, 6],\r\n            [2, 3, 1, 5, 6, 4, 8, 9, 7],\r\n            [5, 6, 4, 8, 9, 7, 2, 3, 1],\r\n            [8, 9, 7, 2, 3, 1, 5, 6, 4],\r\n            [3, 1, 2, 6, 4, 5, 9, 7, 8],\r\n            [6, 4, 5, 9, 7, 8, 3, 1, 2],\r\n            [9, 7, 8, 3, 1, 2, 6, 4, 5],\r\n        ]);\r\n    };\r\n    Generator.prototype.shuffleDigits = function () {\r\n        var possibleDigits = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n        var randomDigit1 = Math.ceil(Math.random() * possibleDigits.length);\r\n        possibleDigits.splice(possibleDigits.indexOf(randomDigit1), 1);\r\n        var randomDigit2 = Math.ceil(Math.random() * possibleDigits.length);\r\n        var groups = _Helpers__WEBPACK_IMPORTED_MODULE_0__[\"default\"].convertRowValuesToGroupedValues(this.gridValues);\r\n        for (var i = 0; i < groups.length; i++) {\r\n            var randomIndex1 = groups[i].indexOf(randomDigit1);\r\n            var randomIndex2 = groups[i].indexOf(randomDigit2);\r\n            this.gridValues[i][randomIndex1] = randomDigit2;\r\n            this.gridValues[i][randomIndex2] = randomDigit1;\r\n        }\r\n    };\r\n    Generator.prototype.shuffleRows = function (range) {\r\n        var min = range[0];\r\n        var max = range[1];\r\n        var randomRow = Math.floor(Math.random() * (max - min + 1) + min);\r\n        var randomRow2 = Math.floor(Math.random() * (max - min + 1) + min);\r\n        var row = this.gridValues[randomRow];\r\n        this.gridValues[randomRow] = this.gridValues[randomRow2];\r\n        this.gridValues[randomRow2] = row;\r\n    };\r\n    Generator.prototype.shuffleColumns = function (range) {\r\n        var _this = this;\r\n        var min = range[0];\r\n        var max = range[1];\r\n        var randomColumn = Math.floor(Math.random() * (max - min + 1) + min);\r\n        var randomColumn2 = Math.floor(Math.random() * (max - min + 1) + min);\r\n        var column = this.gridValues.map(function (row) { return row[randomColumn]; });\r\n        this.gridValues.map(function (row, i) { return row[randomColumn] = _this.gridValues[i][randomColumn2]; });\r\n        this.gridValues.map(function (row, i) { return row[randomColumn2] = column[i]; });\r\n    };\r\n    Generator.prototype.hideSomeCellsInGroups = function () {\r\n        var cellQuantityPerGroupToHide;\r\n        switch (this.difficulty) {\r\n            case 'easy':\r\n                cellQuantityPerGroupToHide = 4;\r\n                break;\r\n            case 'medium':\r\n                cellQuantityPerGroupToHide = 5;\r\n                break;\r\n            case 'hard':\r\n                cellQuantityPerGroupToHide = 6;\r\n                break;\r\n            default:\r\n                cellQuantityPerGroupToHide = 0;\r\n                break;\r\n        }\r\n        var possibleIndexes = [0, 1, 2, 3, 4, 5, 6, 7, 8];\r\n        var indexesToHide = [];\r\n        for (var i = 0; i < this.grid.cells.length; i++) {\r\n            if (i % 9 === 0) {\r\n                indexesToHide = [];\r\n                for (var j = 0; j < cellQuantityPerGroupToHide; j++) {\r\n                    var randomIndex = Math.floor(Math.random() * possibleIndexes.length);\r\n                    indexesToHide.push(possibleIndexes[randomIndex]);\r\n                    possibleIndexes.splice(possibleIndexes.indexOf(possibleIndexes[randomIndex]), 1);\r\n                }\r\n                possibleIndexes = [0, 1, 2, 3, 4, 5, 6, 7, 8];\r\n            }\r\n            if (indexesToHide.includes(i % 9)) {\r\n                this.grid.removeCellValue(this.grid.cells[i]); // Values to find\r\n            }\r\n            else {\r\n                this.grid.cells[i].classList.add('static'); // Base values\r\n            }\r\n        }\r\n    };\r\n    return Generator;\r\n}());\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (Generator);\r\n\n\n//# sourceURL=webpack://sudoku/./src/ts/components/Generator.ts?");

/***/ }),

/***/ "./src/ts/components/Grid.ts":
/*!***********************************!*\
  !*** ./src/ts/components/Grid.ts ***!
  \***********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Helpers */ \"./src/ts/components/Helpers.ts\");\nvar __values = (undefined && undefined.__values) || function(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n};\r\nvar __read = (undefined && undefined.__read) || function (o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n};\r\nvar __spreadArray = (undefined && undefined.__spreadArray) || function (to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n};\r\n\r\nvar Grid = /** @class */ (function () {\r\n    function Grid() {\r\n        this.userEditableCell = null;\r\n        this.cells = [];\r\n        this.correctValues = [];\r\n        this.DOMContainer = this.initBoard();\r\n    }\r\n    Grid.prototype.getBoard = function () {\r\n        return this.DOMContainer;\r\n    };\r\n    Grid.prototype.initBoard = function () {\r\n        var grid = document.createElement('div');\r\n        grid.id = 'grid';\r\n        for (var groupIndex = 1; groupIndex <= 9; groupIndex++) {\r\n            var groupElement = document.createElement('div');\r\n            groupElement.dataset.groupIndex = groupIndex.toString();\r\n            groupElement.classList.add('group');\r\n            for (var cellIndex = 1; cellIndex <= 9; cellIndex++) {\r\n                var cellElement = document.createElement('div');\r\n                cellElement.classList.add('cell');\r\n                cellElement.dataset.cellIndex = cellIndex.toString();\r\n                cellElement.addEventListener('click', this.cellEditableListener.bind(this));\r\n                groupElement.append(cellElement);\r\n                this.cells.push(cellElement);\r\n            }\r\n            grid.append(groupElement);\r\n        }\r\n        this.setCellsInStaticMode();\r\n        return grid;\r\n    };\r\n    Grid.prototype.cellEditableListener = function (e) {\r\n        var cell = e.target;\r\n        // Return if player click on a static cell\r\n        if (cell.classList.contains('static')) {\r\n            return;\r\n        }\r\n        this.clearVerifyMode();\r\n        if (this.userEditableCell) {\r\n            this.unsetEditableCell();\r\n        }\r\n        this.setEditableCell(cell);\r\n    };\r\n    Grid.prototype.setEditableCell = function (cell) {\r\n        this.userEditableCell = cell;\r\n        this.userEditableCell.classList.add('editable');\r\n        this.highlightCells(this.userEditableCell);\r\n    };\r\n    Grid.prototype.unsetEditableCell = function () {\r\n        if (this.userEditableCell) {\r\n            this.userEditableCell.classList.remove('editable');\r\n        }\r\n        this.userEditableCell = null;\r\n        this.unsetHighlightCells();\r\n    };\r\n    Grid.prototype.highlightCells = function (cell) {\r\n        this.unsetHighlightCells();\r\n        this.highlightAttachedCells(cell);\r\n        this.highlightAllConflictCells();\r\n    };\r\n    Grid.prototype.highlightAttachedCells = function (cell) {\r\n        var attachedCells = this.getCellsAttachedToEditableCell(cell);\r\n        for (var i = 0; i < attachedCells.length; i++) {\r\n            attachedCells[i].classList.add('attached-to-editable');\r\n        }\r\n    };\r\n    Grid.prototype.highlightAllConflictCells = function () {\r\n        var e_1, _a, e_2, _b;\r\n        try {\r\n            for (var _c = __values(this.cells), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var cell = _d.value;\r\n                if (!this.getCellValue(cell)) {\r\n                    continue;\r\n                }\r\n                var siblingCells = __spreadArray(__spreadArray(__spreadArray([], __read(this.getGroupOfCells(cell)), false), __read(this.getRowOfCells(cell)), false), __read(this.getColumnOfCells(cell)), false);\r\n                try {\r\n                    for (var siblingCells_1 = (e_2 = void 0, __values(siblingCells)), siblingCells_1_1 = siblingCells_1.next(); !siblingCells_1_1.done; siblingCells_1_1 = siblingCells_1.next()) {\r\n                        var siblingCell = siblingCells_1_1.value;\r\n                        if (cell != siblingCell && this.getCellValue(cell) == this.getCellValue(siblingCell)) {\r\n                            siblingCell.classList.add('incorrect');\r\n                        }\r\n                    }\r\n                }\r\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (siblingCells_1_1 && !siblingCells_1_1.done && (_b = siblingCells_1.return)) _b.call(siblingCells_1);\r\n                    }\r\n                    finally { if (e_2) throw e_2.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n    };\r\n    Grid.prototype.unsetHighlightCells = function () {\r\n        for (var i = 0; i < this.cells.length; i++) {\r\n            this.cells[i].classList.remove('attached-to-editable');\r\n            this.cells[i].classList.remove('incorrect');\r\n        }\r\n    };\r\n    Grid.prototype.updateCellValue = function (cell, value, highlight) {\r\n        if (highlight === void 0) { highlight = true; }\r\n        var valueElement = document.createElement('span');\r\n        valueElement.innerText = typeof value == 'number' ? value.toString() : '';\r\n        cell.innerHTML = valueElement.outerHTML;\r\n        if (highlight) {\r\n            this.highlightCells(cell);\r\n        }\r\n    };\r\n    Grid.prototype.removeCellValue = function (cell) {\r\n        cell.innerHTML = '';\r\n    };\r\n    Grid.prototype.getRowedCellsDataFormat = function () {\r\n        return _Helpers__WEBPACK_IMPORTED_MODULE_0__[\"default\"].concatArraysInArray(_Helpers__WEBPACK_IMPORTED_MODULE_0__[\"default\"].convertGroupedValuesToRowValues(_Helpers__WEBPACK_IMPORTED_MODULE_0__[\"default\"].arraysInArray(this.cells)));\r\n    };\r\n    Grid.prototype.getCellsAttachedToEditableCell = function (cell) {\r\n        var attachedCells = __spreadArray(__spreadArray(__spreadArray(__spreadArray([], __read(this.getGroupOfCells(cell)), false), __read(this.getRowOfCells(cell)), false), __read(this.getColumnOfCells(cell)), false), __read(this.getCellsWithSameValue(cell)), false);\r\n        // Get unique values\r\n        return __spreadArray([], __read(new Set(attachedCells)), false);\r\n    };\r\n    Grid.prototype.getGroupOfCells = function (cell) {\r\n        var groupIndex = this.getGroupIndex(cell);\r\n        return this.cells.slice((groupIndex - 1) * 9, groupIndex * 9);\r\n    };\r\n    Grid.prototype.getRowOfCells = function (cell) {\r\n        var _this = this;\r\n        var rowIndex = this.getRowIndex(cell);\r\n        return this.cells.filter(function (cell) {\r\n            return _this.getRowIndex(cell) == rowIndex;\r\n        });\r\n    };\r\n    Grid.prototype.getColumnOfCells = function (cell) {\r\n        var _this = this;\r\n        var columnIndex = this.getColumnIndex(cell);\r\n        return this.cells.filter(function (cell) {\r\n            return _this.getColumnIndex(cell) == columnIndex;\r\n        });\r\n    };\r\n    Grid.prototype.getCellsWithSameValue = function (cell) {\r\n        var _this = this;\r\n        var value = this.getCellValue(cell);\r\n        if (!value) {\r\n            return [];\r\n        }\r\n        return this.cells.filter(function (cell) {\r\n            return _this.getCellValue(cell) == value;\r\n        });\r\n    };\r\n    Grid.prototype.getRowIndex = function (cell) {\r\n        return Math.floor(this.getRowedCellsDataFormat().indexOf(cell) / 9);\r\n    };\r\n    Grid.prototype.getColumnIndex = function (cell) {\r\n        return this.getRowedCellsDataFormat().indexOf(cell) % 9;\r\n    };\r\n    Grid.prototype.getCellValue = function (cell) {\r\n        if (!cell) {\r\n            return null;\r\n        }\r\n        return parseInt(cell.innerText);\r\n    };\r\n    Grid.prototype.getGroupIndex = function (cell) {\r\n        return parseInt(cell.parentElement.dataset.groupIndex);\r\n    };\r\n    Grid.prototype.isGridFullyFilled = function () {\r\n        var e_3, _a;\r\n        try {\r\n            for (var _b = __values(this.cells), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var cell = _c.value;\r\n                if (!this.getCellValue(cell)) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_3) throw e_3.error; }\r\n        }\r\n        return true;\r\n    };\r\n    Grid.prototype.isGridSolved = function () {\r\n        if (!this.correctValues) {\r\n            return;\r\n        }\r\n        for (var i = 0; i < this.correctValues.length; i++) {\r\n            var cell = this.cells[i];\r\n            if (!this.getCellValue(cell)) {\r\n                return;\r\n            }\r\n            if (this.getCellValue(cell) != this.correctValues[i]) {\r\n                return;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    Grid.prototype.displayConfettis = function (show) {\r\n        if (show === void 0) { show = true; }\r\n        var size = show ? '100%' : '0%';\r\n        this.DOMContainer.style.setProperty('--confetti-element-size', size);\r\n    };\r\n    Grid.prototype.setVerifyMode = function () {\r\n        if (!this.correctValues) {\r\n            return;\r\n        }\r\n        for (var i = 0; i < this.correctValues.length; i++) {\r\n            var cell = this.cells[i];\r\n            cell.classList.add(this.getCellValue(cell) == this.correctValues[i] ? 'correct' : 'incorrect');\r\n        }\r\n    };\r\n    Grid.prototype.clearVerifyMode = function () {\r\n        for (var i = 0; i < this.cells.length; i++) {\r\n            this.cells[i].classList.remove('correct');\r\n            this.cells[i].classList.remove('incorrect');\r\n        }\r\n    };\r\n    Grid.prototype.setCellsInStaticMode = function () {\r\n        for (var i = 0; i < this.cells.length; i++) {\r\n            this.cells[i].classList.add('static');\r\n        }\r\n    };\r\n    Grid.prototype.clearBoard = function () {\r\n        for (var i = 0; i < this.cells.length; i++) {\r\n            this.cells[i].innerHTML = '';\r\n            this.cells[i].classList.remove('static');\r\n            this.clearVerifyMode();\r\n        }\r\n    };\r\n    return Grid;\r\n}());\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (Grid);\r\n\n\n//# sourceURL=webpack://sudoku/./src/ts/components/Grid.ts?");

/***/ }),

/***/ "./src/ts/components/Helpers.ts":
/*!**************************************!*\
  !*** ./src/ts/components/Helpers.ts ***!
  \**************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nvar Helpers = /** @class */ (function () {\r\n    function Helpers() {\r\n    }\r\n    Helpers.convertRowValuesToGroupedValues = function (rowValues) {\r\n        var groupedValues = [];\r\n        var group = [];\r\n        var a = 0;\r\n        var b = 0;\r\n        for (var i = 0; i < 81; i++) {\r\n            if (i != 0) {\r\n                if (i % 27 === 0) {\r\n                    a += 3;\r\n                    b = 0;\r\n                }\r\n                if (i % 9 === 0) {\r\n                    groupedValues.push(group);\r\n                    group = [];\r\n                    a -= 3;\r\n                    b += 3;\r\n                }\r\n                if (i % 3 === 0) {\r\n                    a++;\r\n                    b -= 3;\r\n                }\r\n            }\r\n            group.push(rowValues[a][b]);\r\n            b++;\r\n        }\r\n        groupedValues.push(group);\r\n        return groupedValues;\r\n    };\r\n    Helpers.convertGroupedValuesToRowValues = function (groupedValues) {\r\n        return Helpers.convertRowValuesToGroupedValues(groupedValues);\r\n    };\r\n    Helpers.concatArraysInArray = function (array) {\r\n        var result = [];\r\n        for (var i = 0; i < array.length; i++) {\r\n            result = result.concat(array[i]);\r\n        }\r\n        return result;\r\n    };\r\n    Helpers.arraysInArray = function (array, itemByArray) {\r\n        if (itemByArray === void 0) { itemByArray = 9; }\r\n        var result = [];\r\n        var subArray = [];\r\n        for (var i = 0; i < array.length; i++) {\r\n            if (i && i % itemByArray === 0) {\r\n                result.push(subArray);\r\n                subArray = [];\r\n            }\r\n            subArray.push(array[i]);\r\n        }\r\n        result.push(subArray);\r\n        return result;\r\n    };\r\n    return Helpers;\r\n}());\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (Helpers);\r\n\n\n//# sourceURL=webpack://sudoku/./src/ts/components/Helpers.ts?");

/***/ }),

/***/ "./src/ts/components/SocialMedia.ts":
/*!******************************************!*\
  !*** ./src/ts/components/SocialMedia.ts ***!
  \******************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nvar SocialMedia = /** @class */ (function () {\r\n    function SocialMedia() {\r\n        this.socialMedia = {\r\n            github: {\r\n                icon: 'fa-brands fa-github',\r\n                href: 'https://github.com/hugoderre'\r\n            },\r\n            website: {\r\n                icon: 'fa-solid fa-globe',\r\n                href: 'https://www.hugoderre.fr'\r\n            },\r\n        };\r\n    }\r\n    SocialMedia.prototype.getElement = function () {\r\n        var container = document.createElement('div');\r\n        container.id = 'social-media';\r\n        var _loop_1 = function (key) {\r\n            var link = document.createElement('a');\r\n            link.href = this_1.socialMedia[key].href;\r\n            link.target = '_blank';\r\n            link.rel = 'noopener noreferrer';\r\n            var icon = document.createElement('i');\r\n            this_1.socialMedia[key].icon.split(' ').forEach(function (iconClass) {\r\n                icon.classList.add(iconClass);\r\n            });\r\n            link.append(icon);\r\n            container.append(link);\r\n        };\r\n        var this_1 = this;\r\n        for (var key in this.socialMedia) {\r\n            _loop_1(key);\r\n        }\r\n        return container;\r\n    };\r\n    return SocialMedia;\r\n}());\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (SocialMedia);\r\n\n\n//# sourceURL=webpack://sudoku/./src/ts/components/SocialMedia.ts?");

/***/ }),

/***/ "./src/ts/components/Timer.ts":
/*!************************************!*\
  !*** ./src/ts/components/Timer.ts ***!
  \************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nvar Timer = /** @class */ (function () {\r\n    function Timer() {\r\n        this.time = 0;\r\n        this.tick = undefined;\r\n        this.timerSpan = document.createElement('span');\r\n    }\r\n    Timer.prototype.getTimer = function () {\r\n        var timerContainer = document.createElement('div');\r\n        timerContainer.id = 'timer';\r\n        this.timerSpan.innerText = '00:00';\r\n        var timerIcon = document.createElement('i');\r\n        timerIcon.classList.add('gg-timer');\r\n        timerContainer.append(timerIcon);\r\n        timerContainer.append(this.timerSpan);\r\n        return timerContainer;\r\n    };\r\n    Timer.prototype.start = function () {\r\n        this.reset();\r\n        this.time--; // To make sure the timer starts at 0\r\n        this.update(); // Run directly once to update the timer\r\n        this.tick = setInterval(this.update.bind(this), 1000);\r\n    };\r\n    Timer.prototype.update = function () {\r\n        this.time++;\r\n        this.timerSpan.innerText = this.getTime();\r\n    };\r\n    Timer.prototype.stop = function () {\r\n        clearInterval(this.tick);\r\n    };\r\n    Timer.prototype.reset = function () {\r\n        this.time = 0;\r\n        clearInterval(this.tick);\r\n    };\r\n    Timer.prototype.getTime = function () {\r\n        var minutes = Math.floor(this.time / 60);\r\n        var seconds = this.time % 60;\r\n        return \"\".concat(minutes < 10 ? '0' + minutes : minutes, \":\").concat(seconds < 10 ? '0' + seconds : seconds);\r\n    };\r\n    return Timer;\r\n}());\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (Timer);\r\n\n\n//# sourceURL=webpack://sudoku/./src/ts/components/Timer.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/ts/App.ts");
/******/ 	
/******/ })()
;